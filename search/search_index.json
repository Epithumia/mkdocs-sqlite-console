{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MkDocs-SQLite-Console Mkdocs-SQLite-Console est un plugin pour MkDocs, qui permet d'afficher un IDE SQL (SQLite) permettant d'ex\u00e9cuter du code. Le public vis\u00e9 est essentiellement les enseignants et \u00e9tudiants : les premiers pourront ainsi placer du code que les seconds pourront ex\u00e9cuter et ainsi voir le r\u00e9sultat de leur requ\u00eate. Installation Installer le plugin avec pip : pyhton3 -m pip install git+https://github.com/Epithumia/mkdocs-sqlite-console.git Pour acc\u00e9der \u00e0 la documentation : git clone git+https://github.com/Epithumia/mkdocs-sqlite-console.git cd mkdocs-sqlite-console pyhton3 -m pip install . [ docs ] mkdocs build Puis dans le dossier docs , activer le plugin dans votre fichier mkdocs.yml : plugins : - search - sqlite-console Note Si vous n'avez aucune entr\u00e9e dans la section plugins de votre fichier de configuration, vous voudrez sans doute ajouter le plugin search . MkDocs l'active par d\u00e9faut s'il n'y a pas d'autres plugins , et dans le cas contraire, MkDocs demande de l'activer explicitement. Plus d'informations sur les plugins se trouvent dans la documentation MkDocs . Usage Voir la section Guide d'utilisation Licence Voir la licence Voir aussi Plus d'informations sur les templates here . Plus d'informations sur les blocs here .","title":"Home"},{"location":"#mkdocs-sqlite-console","text":"Mkdocs-SQLite-Console est un plugin pour MkDocs, qui permet d'afficher un IDE SQL (SQLite) permettant d'ex\u00e9cuter du code. Le public vis\u00e9 est essentiellement les enseignants et \u00e9tudiants : les premiers pourront ainsi placer du code que les seconds pourront ex\u00e9cuter et ainsi voir le r\u00e9sultat de leur requ\u00eate.","title":"MkDocs-SQLite-Console"},{"location":"#installation","text":"Installer le plugin avec pip : pyhton3 -m pip install git+https://github.com/Epithumia/mkdocs-sqlite-console.git Pour acc\u00e9der \u00e0 la documentation : git clone git+https://github.com/Epithumia/mkdocs-sqlite-console.git cd mkdocs-sqlite-console pyhton3 -m pip install . [ docs ] mkdocs build Puis dans le dossier docs , activer le plugin dans votre fichier mkdocs.yml : plugins : - search - sqlite-console Note Si vous n'avez aucune entr\u00e9e dans la section plugins de votre fichier de configuration, vous voudrez sans doute ajouter le plugin search . MkDocs l'active par d\u00e9faut s'il n'y a pas d'autres plugins , et dans le cas contraire, MkDocs demande de l'activer explicitement. Plus d'informations sur les plugins se trouvent dans la documentation MkDocs .","title":"Installation"},{"location":"#usage","text":"Voir la section Guide d'utilisation","title":"Usage"},{"location":"#licence","text":"Voir la licence","title":"Licence"},{"location":"#voir-aussi","text":"Plus d'informations sur les templates here . Plus d'informations sur les blocs here .","title":"Voir aussi"},{"location":"licence/","text":"Mkdocs-sqlite-console plugin Copyright (c) 2022 Rafa\u00ebl Lopez Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. SQL.js code Copyright (c) 2017 sql.js authors (see https://github.com/sql-js/sql.js/blob/master/AUTHORS ) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"licence/#mkdocs-sqlite-console-plugin","text":"Copyright (c) 2022 Rafa\u00ebl Lopez Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Mkdocs-sqlite-console plugin"},{"location":"licence/#sqljs-code","text":"Copyright (c) 2017 sql.js authors (see https://github.com/sql-js/sql.js/blob/master/AUTHORS ) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"SQL.js code"},{"location":"notes-de-version/","text":"Historique des versions 1.0.0 Version initiale. 1.0.1 Correction de probl\u00e8mes de chemins Documentation compl\u00e9t\u00e9e 1.0.1a Inclusion des fichiers css/ et js/ dans l'installation.","title":"Historique des versions"},{"location":"notes-de-version/#historique-des-versions","text":"","title":"Historique des versions"},{"location":"notes-de-version/#100","text":"Version initiale.","title":"1.0.0"},{"location":"notes-de-version/#101","text":"Correction de probl\u00e8mes de chemins Documentation compl\u00e9t\u00e9e","title":"1.0.1"},{"location":"notes-de-version/#101a","text":"Inclusion des fichiers css/ et js/ dans l'installation.","title":"1.0.1a"},{"location":"usage/","text":"Utilisation Activer le plugin Ajouter dans votre fichier mkdocs.yml : plugins : - search - sqlite-console Note Si vous n'avez aucune entr\u00e9e dans la section plugins de votre fichier de configuration, vous voudrez sans doute ajouter le plugin search . MkDocs l'active par d\u00e9faut s'il n'y a pas d'autres plugins , et dans le cas contraire, MkDocs demande de l'activer explicitement. Afficher la console/IDE On peut afficher une console/IDE SQLite gr\u00e2ce \u00e0 la commande {{ sqlide param\u00e8tres }} . Cette commande accepte quatre param\u00e8tres, tous optionnels : un titre : par exemple titre=\"Exercice 1\" . Par d\u00e9faut, le titre est \"sql\" un chemin vers un script SQL d'initialisation init : par exemple init=sql/init.md un chemin vers une base SQLite : par exemple bases/test.db un chemin vers un fichier de code sql pr\u00e9-saisi dans l'IDE : par exemple sql=\"sql/code.sql\" Astuce A part pour le titre, les apostrophes ou guillemets sont optionnels. Ainsi, sql=\"sql/code.sql\" , sql='sql/code.sql' et sql=sql/code.sql sont \u00e9quivalents. Attention le titre doit \u00eatre entre guillemets les chemins vers les fichiers sont relatifs \u00e0 la racine du site les chemins ne peuvent pas contenir d'espace Quelques exemples Affichage basique Pour afficher un IDE avec du code SQL d'initialisation et du code pr\u00e9-saisi : {{ sqlide titre=\"IDE avec initialisation et code pr\u00e9-saisi\" init=\"sql/init1.sql\" sql=\"sql/code.sql\" }} On obtient l'affichage ci-dessous : IDE avec initialisation et code pr\u00e9-saisi SELECT * FROM employees; SELECT COUNT(*) FROM employees; Ex\u00e9cuter onElementLoaded(\"div#ide1\").then(() => { const ide = document.querySelector(\"div#ide1\"); load(ide, '/', 'DROP TABLE IF EXISTS employees;\\nCREATE TABLE employees\\n(\\n id integer,\\n name text,\\n designation text,\\n manager integer,\\n hired_on date,\\n salary integer,\\n commission float,\\n dept integer\\n);\\n\\nINSERT INTO employees VALUES (1,\\'JOHNSON\\',\\'ADMIN\\',6,\\'1990-12-17\\',18000,NULL,4);\\nINSERT INTO employees VALUES (2,\\'HARDING\\',\\'MANAGER\\',9,\\'1998-02-02\\',52000,300,3);\\nINSERT INTO employees VALUES (3,\\'TAFT\\',\\'SALES I\\',2,\\'1996-01-02\\',25000,500,3);\\nINSERT INTO employees VALUES (4,\\'HOOVER\\',\\'SALES I\\',2,\\'1990-04-02\\',27000,NULL,3);\\nINSERT INTO employees VALUES (5,\\'LINCOLN\\',\\'TECH\\',6,\\'1994-06-23\\',22500,1400,4);\\nINSERT INTO employees VALUES (6,\\'GARFIELD\\',\\'MANAGER\\',9,\\'1993-05-01\\',54000,NULL,4);\\n'); }).catch(() => {}); On peut aussi charger une base directement : {{sqlide titre=\"IDE avec une base binaire charg\u00e9e et code pr\u00e9-saisi\" base=\"bases/test.db\" sql=\"sql/code.sql\" }} IDE avec une base binaire charg\u00e9e et code pr\u00e9-saisi SELECT * FROM employees; SELECT COUNT(*) FROM employees; Ex\u00e9cuter onElementLoaded(\"div#ide2\").then(() => { const ide = document.querySelector(\"div#ide2\"); load(ide, 'https:/epithumia.github.io/mkdocs-sqlite-console/bases/test.db', ''); }).catch(() => {}); Utilisation dans les admonitions de mkdocs-materiel On peut appeler le code \u00e0 l'int\u00e9rieur d'un admonition : !!! sql \"Bloc accord\u00e9on avec initialisation et code pr\u00e9-saisi\" {{ sqlide titre=\"Init + Code\" init=\"sql/init1.sql\" sql=\"sql/code.sql\" }} donne : Bloc admonition avec initialisation et code pr\u00e9-saisi Init + Code SELECT * FROM employees; SELECT COUNT(*) FROM employees; Ex\u00e9cuter onElementLoaded(\"div#ide3\").then(() => { const ide = document.querySelector(\"div#ide3\"); load(ide, '/', 'DROP TABLE IF EXISTS employees;\\nCREATE TABLE employees\\n(\\n id integer,\\n name text,\\n designation text,\\n manager integer,\\n hired_on date,\\n salary integer,\\n commission float,\\n dept integer\\n);\\n\\nINSERT INTO employees VALUES (1,\\'JOHNSON\\',\\'ADMIN\\',6,\\'1990-12-17\\',18000,NULL,4);\\nINSERT INTO employees VALUES (2,\\'HARDING\\',\\'MANAGER\\',9,\\'1998-02-02\\',52000,300,3);\\nINSERT INTO employees VALUES (3,\\'TAFT\\',\\'SALES I\\',2,\\'1996-01-02\\',25000,500,3);\\nINSERT INTO employees VALUES (4,\\'HOOVER\\',\\'SALES I\\',2,\\'1990-04-02\\',27000,NULL,3);\\nINSERT INTO employees VALUES (5,\\'LINCOLN\\',\\'TECH\\',6,\\'1994-06-23\\',22500,1400,4);\\nINSERT INTO employees VALUES (6,\\'GARFIELD\\',\\'MANAGER\\',9,\\'1993-05-01\\',54000,NULL,4);\\n'); }).catch(() => {}); ???+ sql \"Bloc accord\u00e9on avec initialisation et code pr\u00e9-saisi\" {{ sqlide titre=\"Init + Code\" init=\"sql/init1.sql\" sql=\"sql/code.sql\" }} donne Bloc accord\u00e9on avec initialisation et code pr\u00e9-saisi Init + Code SELECT * FROM employees; SELECT COUNT(*) FROM employees; Ex\u00e9cuter onElementLoaded(\"div#ide4\").then(() => { const ide = document.querySelector(\"div#ide4\"); load(ide, '/', 'DROP TABLE IF EXISTS employees;\\nCREATE TABLE employees\\n(\\n id integer,\\n name text,\\n designation text,\\n manager integer,\\n hired_on date,\\n salary integer,\\n commission float,\\n dept integer\\n);\\n\\nINSERT INTO employees VALUES (1,\\'JOHNSON\\',\\'ADMIN\\',6,\\'1990-12-17\\',18000,NULL,4);\\nINSERT INTO employees VALUES (2,\\'HARDING\\',\\'MANAGER\\',9,\\'1998-02-02\\',52000,300,3);\\nINSERT INTO employees VALUES (3,\\'TAFT\\',\\'SALES I\\',2,\\'1996-01-02\\',25000,500,3);\\nINSERT INTO employees VALUES (4,\\'HOOVER\\',\\'SALES I\\',2,\\'1990-04-02\\',27000,NULL,3);\\nINSERT INTO employees VALUES (5,\\'LINCOLN\\',\\'TECH\\',6,\\'1994-06-23\\',22500,1400,4);\\nINSERT INTO employees VALUES (6,\\'GARFIELD\\',\\'MANAGER\\',9,\\'1993-05-01\\',54000,NULL,4);\\n'); }).catch(() => {}); !!! sql \"Bloc adminition avec initialisation et code pr\u00e9-saisi\" {{ sqlide titre=\"Init + Code\" init=\"sql/init1.sql\" sql=\"sql/code.sql\" }} Bug Les blocs ne s'affichent pas correctement dans les adminitions qui sont repli\u00e9es par d\u00e9faut: ??? sql \"Bloc admonition avec initialisation et code pr\u00e9-saisi\" {{ sqlide titre=\"Init + Code\" init=\"sql/init1.sql\" sql=\"sql/code.sql\" }} Il faut cliquer sur le champ de texte pour que l'IDE s'affiche (incorrectement). Bloc admonition avec initialisation et code pr\u00e9-saisi Init + Code SELECT * FROM employees; SELECT COUNT(*) FROM employees; Ex\u00e9cuter onElementLoaded(\"div#ide5\").then(() => { const ide = document.querySelector(\"div#ide5\"); load(ide, '/', 'DROP TABLE IF EXISTS employees;\\nCREATE TABLE employees\\n(\\n id integer,\\n name text,\\n designation text,\\n manager integer,\\n hired_on date,\\n salary integer,\\n commission float,\\n dept integer\\n);\\n\\nINSERT INTO employees VALUES (1,\\'JOHNSON\\',\\'ADMIN\\',6,\\'1990-12-17\\',18000,NULL,4);\\nINSERT INTO employees VALUES (2,\\'HARDING\\',\\'MANAGER\\',9,\\'1998-02-02\\',52000,300,3);\\nINSERT INTO employees VALUES (3,\\'TAFT\\',\\'SALES I\\',2,\\'1996-01-02\\',25000,500,3);\\nINSERT INTO employees VALUES (4,\\'HOOVER\\',\\'SALES I\\',2,\\'1990-04-02\\',27000,NULL,3);\\nINSERT INTO employees VALUES (5,\\'LINCOLN\\',\\'TECH\\',6,\\'1994-06-23\\',22500,1400,4);\\nINSERT INTO employees VALUES (6,\\'GARFIELD\\',\\'MANAGER\\',9,\\'1993-05-01\\',54000,NULL,4);\\n'); }).catch(() => {}); Erreurs Le plugin d\u00e9tectera les fichiers non existants : {{sqlide titre=\"Erreur fichier base manquant\" base=bases/basem.db sql=sql/code1.sql }} Erreur fichier base manquant --Fichier de base 'bases/basem.db' introuvable Ex\u00e9cuter onElementLoaded(\"div#ide6\").then(() => { const ide = document.querySelector(\"div#ide6\"); load(ide, '/', ''); }).catch(() => {}); {{sqlide titre=\"Erreur fichier sql manquant\" init=sql/initm.sql sql=sql/codem.sql }} Erreur fichier sql manquant --Fichier d'initialisation 'sql/initm.sql' introuvable Ex\u00e9cuter onElementLoaded(\"div#ide7\").then(() => { const ide = document.querySelector(\"div#ide7\"); load(ide, '/', ''); }).catch(() => {});","title":"Guide d'utilisation"},{"location":"usage/#utilisation","text":"","title":"Utilisation"},{"location":"usage/#activer-le-plugin","text":"Ajouter dans votre fichier mkdocs.yml : plugins : - search - sqlite-console Note Si vous n'avez aucune entr\u00e9e dans la section plugins de votre fichier de configuration, vous voudrez sans doute ajouter le plugin search . MkDocs l'active par d\u00e9faut s'il n'y a pas d'autres plugins , et dans le cas contraire, MkDocs demande de l'activer explicitement.","title":"Activer le plugin"},{"location":"usage/#afficher-la-consoleide","text":"On peut afficher une console/IDE SQLite gr\u00e2ce \u00e0 la commande {{ sqlide param\u00e8tres }} . Cette commande accepte quatre param\u00e8tres, tous optionnels : un titre : par exemple titre=\"Exercice 1\" . Par d\u00e9faut, le titre est \"sql\" un chemin vers un script SQL d'initialisation init : par exemple init=sql/init.md un chemin vers une base SQLite : par exemple bases/test.db un chemin vers un fichier de code sql pr\u00e9-saisi dans l'IDE : par exemple sql=\"sql/code.sql\" Astuce A part pour le titre, les apostrophes ou guillemets sont optionnels. Ainsi, sql=\"sql/code.sql\" , sql='sql/code.sql' et sql=sql/code.sql sont \u00e9quivalents. Attention le titre doit \u00eatre entre guillemets les chemins vers les fichiers sont relatifs \u00e0 la racine du site les chemins ne peuvent pas contenir d'espace","title":"Afficher la console/IDE"},{"location":"usage/#quelques-exemples","text":"","title":"Quelques exemples"},{"location":"usage/#affichage-basique","text":"Pour afficher un IDE avec du code SQL d'initialisation et du code pr\u00e9-saisi : {{ sqlide titre=\"IDE avec initialisation et code pr\u00e9-saisi\" init=\"sql/init1.sql\" sql=\"sql/code.sql\" }} On obtient l'affichage ci-dessous : IDE avec initialisation et code pr\u00e9-saisi SELECT * FROM employees; SELECT COUNT(*) FROM employees; Ex\u00e9cuter onElementLoaded(\"div#ide1\").then(() => { const ide = document.querySelector(\"div#ide1\"); load(ide, '/', 'DROP TABLE IF EXISTS employees;\\nCREATE TABLE employees\\n(\\n id integer,\\n name text,\\n designation text,\\n manager integer,\\n hired_on date,\\n salary integer,\\n commission float,\\n dept integer\\n);\\n\\nINSERT INTO employees VALUES (1,\\'JOHNSON\\',\\'ADMIN\\',6,\\'1990-12-17\\',18000,NULL,4);\\nINSERT INTO employees VALUES (2,\\'HARDING\\',\\'MANAGER\\',9,\\'1998-02-02\\',52000,300,3);\\nINSERT INTO employees VALUES (3,\\'TAFT\\',\\'SALES I\\',2,\\'1996-01-02\\',25000,500,3);\\nINSERT INTO employees VALUES (4,\\'HOOVER\\',\\'SALES I\\',2,\\'1990-04-02\\',27000,NULL,3);\\nINSERT INTO employees VALUES (5,\\'LINCOLN\\',\\'TECH\\',6,\\'1994-06-23\\',22500,1400,4);\\nINSERT INTO employees VALUES (6,\\'GARFIELD\\',\\'MANAGER\\',9,\\'1993-05-01\\',54000,NULL,4);\\n'); }).catch(() => {}); On peut aussi charger une base directement : {{sqlide titre=\"IDE avec une base binaire charg\u00e9e et code pr\u00e9-saisi\" base=\"bases/test.db\" sql=\"sql/code.sql\" }} IDE avec une base binaire charg\u00e9e et code pr\u00e9-saisi SELECT * FROM employees; SELECT COUNT(*) FROM employees; Ex\u00e9cuter onElementLoaded(\"div#ide2\").then(() => { const ide = document.querySelector(\"div#ide2\"); load(ide, 'https:/epithumia.github.io/mkdocs-sqlite-console/bases/test.db', ''); }).catch(() => {});","title":"Affichage basique"},{"location":"usage/#utilisation-dans-les-admonitions-de-mkdocs-materiel","text":"On peut appeler le code \u00e0 l'int\u00e9rieur d'un admonition : !!! sql \"Bloc accord\u00e9on avec initialisation et code pr\u00e9-saisi\" {{ sqlide titre=\"Init + Code\" init=\"sql/init1.sql\" sql=\"sql/code.sql\" }} donne : Bloc admonition avec initialisation et code pr\u00e9-saisi Init + Code SELECT * FROM employees; SELECT COUNT(*) FROM employees; Ex\u00e9cuter onElementLoaded(\"div#ide3\").then(() => { const ide = document.querySelector(\"div#ide3\"); load(ide, '/', 'DROP TABLE IF EXISTS employees;\\nCREATE TABLE employees\\n(\\n id integer,\\n name text,\\n designation text,\\n manager integer,\\n hired_on date,\\n salary integer,\\n commission float,\\n dept integer\\n);\\n\\nINSERT INTO employees VALUES (1,\\'JOHNSON\\',\\'ADMIN\\',6,\\'1990-12-17\\',18000,NULL,4);\\nINSERT INTO employees VALUES (2,\\'HARDING\\',\\'MANAGER\\',9,\\'1998-02-02\\',52000,300,3);\\nINSERT INTO employees VALUES (3,\\'TAFT\\',\\'SALES I\\',2,\\'1996-01-02\\',25000,500,3);\\nINSERT INTO employees VALUES (4,\\'HOOVER\\',\\'SALES I\\',2,\\'1990-04-02\\',27000,NULL,3);\\nINSERT INTO employees VALUES (5,\\'LINCOLN\\',\\'TECH\\',6,\\'1994-06-23\\',22500,1400,4);\\nINSERT INTO employees VALUES (6,\\'GARFIELD\\',\\'MANAGER\\',9,\\'1993-05-01\\',54000,NULL,4);\\n'); }).catch(() => {}); ???+ sql \"Bloc accord\u00e9on avec initialisation et code pr\u00e9-saisi\" {{ sqlide titre=\"Init + Code\" init=\"sql/init1.sql\" sql=\"sql/code.sql\" }} donne Bloc accord\u00e9on avec initialisation et code pr\u00e9-saisi Init + Code SELECT * FROM employees; SELECT COUNT(*) FROM employees; Ex\u00e9cuter onElementLoaded(\"div#ide4\").then(() => { const ide = document.querySelector(\"div#ide4\"); load(ide, '/', 'DROP TABLE IF EXISTS employees;\\nCREATE TABLE employees\\n(\\n id integer,\\n name text,\\n designation text,\\n manager integer,\\n hired_on date,\\n salary integer,\\n commission float,\\n dept integer\\n);\\n\\nINSERT INTO employees VALUES (1,\\'JOHNSON\\',\\'ADMIN\\',6,\\'1990-12-17\\',18000,NULL,4);\\nINSERT INTO employees VALUES (2,\\'HARDING\\',\\'MANAGER\\',9,\\'1998-02-02\\',52000,300,3);\\nINSERT INTO employees VALUES (3,\\'TAFT\\',\\'SALES I\\',2,\\'1996-01-02\\',25000,500,3);\\nINSERT INTO employees VALUES (4,\\'HOOVER\\',\\'SALES I\\',2,\\'1990-04-02\\',27000,NULL,3);\\nINSERT INTO employees VALUES (5,\\'LINCOLN\\',\\'TECH\\',6,\\'1994-06-23\\',22500,1400,4);\\nINSERT INTO employees VALUES (6,\\'GARFIELD\\',\\'MANAGER\\',9,\\'1993-05-01\\',54000,NULL,4);\\n'); }).catch(() => {}); !!! sql \"Bloc adminition avec initialisation et code pr\u00e9-saisi\" {{ sqlide titre=\"Init + Code\" init=\"sql/init1.sql\" sql=\"sql/code.sql\" }} Bug Les blocs ne s'affichent pas correctement dans les adminitions qui sont repli\u00e9es par d\u00e9faut: ??? sql \"Bloc admonition avec initialisation et code pr\u00e9-saisi\" {{ sqlide titre=\"Init + Code\" init=\"sql/init1.sql\" sql=\"sql/code.sql\" }} Il faut cliquer sur le champ de texte pour que l'IDE s'affiche (incorrectement). Bloc admonition avec initialisation et code pr\u00e9-saisi Init + Code SELECT * FROM employees; SELECT COUNT(*) FROM employees; Ex\u00e9cuter onElementLoaded(\"div#ide5\").then(() => { const ide = document.querySelector(\"div#ide5\"); load(ide, '/', 'DROP TABLE IF EXISTS employees;\\nCREATE TABLE employees\\n(\\n id integer,\\n name text,\\n designation text,\\n manager integer,\\n hired_on date,\\n salary integer,\\n commission float,\\n dept integer\\n);\\n\\nINSERT INTO employees VALUES (1,\\'JOHNSON\\',\\'ADMIN\\',6,\\'1990-12-17\\',18000,NULL,4);\\nINSERT INTO employees VALUES (2,\\'HARDING\\',\\'MANAGER\\',9,\\'1998-02-02\\',52000,300,3);\\nINSERT INTO employees VALUES (3,\\'TAFT\\',\\'SALES I\\',2,\\'1996-01-02\\',25000,500,3);\\nINSERT INTO employees VALUES (4,\\'HOOVER\\',\\'SALES I\\',2,\\'1990-04-02\\',27000,NULL,3);\\nINSERT INTO employees VALUES (5,\\'LINCOLN\\',\\'TECH\\',6,\\'1994-06-23\\',22500,1400,4);\\nINSERT INTO employees VALUES (6,\\'GARFIELD\\',\\'MANAGER\\',9,\\'1993-05-01\\',54000,NULL,4);\\n'); }).catch(() => {});","title":"Utilisation dans les admonitions de mkdocs-materiel"},{"location":"usage/#erreurs","text":"Le plugin d\u00e9tectera les fichiers non existants : {{sqlide titre=\"Erreur fichier base manquant\" base=bases/basem.db sql=sql/code1.sql }} Erreur fichier base manquant --Fichier de base 'bases/basem.db' introuvable Ex\u00e9cuter onElementLoaded(\"div#ide6\").then(() => { const ide = document.querySelector(\"div#ide6\"); load(ide, '/', ''); }).catch(() => {}); {{sqlide titre=\"Erreur fichier sql manquant\" init=sql/initm.sql sql=sql/codem.sql }} Erreur fichier sql manquant --Fichier d'initialisation 'sql/initm.sql' introuvable Ex\u00e9cuter onElementLoaded(\"div#ide7\").then(() => { const ide = document.querySelector(\"div#ide7\"); load(ide, '/', ''); }).catch(() => {});","title":"Erreurs"}]}